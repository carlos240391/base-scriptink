{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/carlosenrique/Desktop/TEMPLATES-ScriptInk/2-layout-scriptink-main/components/sections/progress_bar/progress_bar.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nconst Indicator = styled.div.withConfig({\n  displayName: \"progress_bar__Indicator\",\n  componentId: \"fc3cqf-0\"\n})([\"width:0%;height:6px;background:linear-gradient(to right,\", \",\", \");position:fixed;top:0px;left:0px;z-index:5000;border-radius:0px 0px 3px 3px;\"], props => props.firstColor, props => props.secondColor);\n\nconst ProgressBar = props => {\n  const {\n    firstColor,\n    secondColor\n  } = props.themeSettings.progressBarSettings;\n\n  const moveScroll = e => {\n    if (false) {\n      const scrollIndicator = document.querySelector('#indicator');\n\n      if (scrollIndicator) {\n        const maxHeight = window.document.body.scrollHeight - window.innerHeight;\n        const percentage = window.scrollY / maxHeight * 100;\n        scrollIndicator.style.width = percentage + '%';\n      }\n    }\n  };\n\n  React.useEffect(() => {\n    moveScroll();\n    window.addEventListener('scroll', moveScroll);\n    return () => window.removeEventListener('scroll', moveScroll);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Indicator, {\n      id: \"indicator\",\n      firstColor: firstColor,\n      secondColor: secondColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\nexport default ProgressBar;","map":{"version":3,"sources":["/Users/carlosenrique/Desktop/TEMPLATES-ScriptInk/2-layout-scriptink-main/components/sections/progress_bar/progress_bar.js"],"names":["React","styled","Indicator","div","props","firstColor","secondColor","ProgressBar","themeSettings","progressBarSettings","moveScroll","e","scrollIndicator","document","querySelector","maxHeight","window","body","scrollHeight","innerHeight","percentage","scrollY","style","width","useEffect","addEventListener","removeEventListener"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAGA,MAAMC,SAAS,GAAGD,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,uJAGiCC,KAAD,IAAWA,KAAK,CAACC,UAHjD,EAGiED,KAAD,IAAWA,KAAK,CAACE,WAHjF,CAAf;;AAWA,MAAMC,WAAW,GAAIH,KAAD,IAAW;AAE3B,QAAM;AACFC,IAAAA,UADE;AAEFC,IAAAA;AAFE,MAGDF,KAAK,CAACI,aAAN,CAAoBC,mBAHzB;;AAKA,QAAMC,UAAU,GAAIC,CAAD,IAAM;AACrB,eAAiC;AAE7B,YAAMC,eAAe,GAAGC,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAxB;;AACA,UAAGF,eAAH,EAAmB;AACf,cAAMG,SAAS,GAAGC,MAAM,CAACH,QAAP,CAAgBI,IAAhB,CAAqBC,YAArB,GAAoCF,MAAM,CAACG,WAA7D;AACA,cAAMC,UAAU,GAAKJ,MAAM,CAACK,OAAR,GAAiBN,SAAjB,GAA6B,GAAjD;AACAH,QAAAA,eAAe,CAACU,KAAhB,CAAsBC,KAAtB,GAA8BH,UAAU,GAAG,GAA3C;AACH;AACJ;AACJ,GAVD;;AAYApB,EAAAA,KAAK,CAACwB,SAAN,CAAgB,MAAI;AAEhBd,IAAAA,UAAU;AAEVM,IAAAA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkCf,UAAlC;AACA,WAAO,MAAMM,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqChB,UAArC,CAAb;AACH,GAND,EAME,EANF;AASA,sBACI;AAAA,2BACI,QAAC,SAAD;AAAY,MAAA,EAAE,EAAC,WAAf;AACY,MAAA,UAAU,EAAEL,UADxB;AAEY,MAAA,WAAW,EAAEC;AAFzB;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAQH,CApCD;;AAsCA,eAAeC,WAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components'\n\n\nconst Indicator = styled.div`\n        width:0%;\n        height:6px;\n        background:linear-gradient(to right, ${(props) => props.firstColor}, ${(props) => props.secondColor});\n        position:fixed;\n        top:0px;\n        left:0px;\n        z-index:5000;\n        border-radius:0px 0px 3px 3px;\n`;\n\nconst ProgressBar = (props) => {\n\n    const {\n        firstColor,\n        secondColor\n    }  = props.themeSettings.progressBarSettings\n\n    const moveScroll = (e) =>{\n        if(typeof window !== 'undefined'){\n\n            const scrollIndicator = document.querySelector('#indicator');\n            if(scrollIndicator){\n                const maxHeight = window.document.body.scrollHeight - window.innerHeight;\n                const percentage = ((window.scrollY)/maxHeight * 100);\n                scrollIndicator.style.width = percentage + '%';\n            }\n        }\n    }\n\n    React.useEffect(()=>{\n       \n        moveScroll()\n        \n        window.addEventListener('scroll', moveScroll)\n        return () => window.removeEventListener('scroll', moveScroll);\n    },[])\n\n\n    return (\n        <>\n            <Indicator  id=\"indicator\"\n                        firstColor={firstColor}\n                        secondColor={secondColor}\n                        />   \n        </>\n    );\n};\n\nexport default ProgressBar;"]},"metadata":{},"sourceType":"module"}