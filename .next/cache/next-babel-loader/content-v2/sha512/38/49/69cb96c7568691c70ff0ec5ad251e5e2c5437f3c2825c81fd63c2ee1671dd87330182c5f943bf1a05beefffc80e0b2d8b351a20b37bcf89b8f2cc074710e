{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport _defineProperty from \"/Users/carlosenrique/Desktop/TEMPLATES-ScriptInk/2-layout-scriptink-main/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _slicedToArray from \"/Users/carlosenrique/Desktop/TEMPLATES-ScriptInk/2-layout-scriptink-main/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { SliderCont, SliderItem } from './slider_opacity_styles';\nimport { motion } from 'framer-motion';\nimport { Ancla } from '../../generals/buttons';\n\nvar SliderOpacity = function SliderOpacity(props) {\n  //const {items, controls} = props\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      index = _React$useState2[0],\n      setIndex = _React$useState2[1];\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      show = _React$useState4[0],\n      setShow = _React$useState4[1];\n\n  var _props$themeSettings$ = props.themeSettings.sliderOpacitySettings,\n      sliders = _props$themeSettings$.sliders,\n      controls = _props$themeSettings$.controls,\n      time = _props$themeSettings$.time,\n      visibility = _props$themeSettings$.visibility,\n      colorTitles = _props$themeSettings$.colorTitles;\n  React.useEffect(function () {\n    var tick = setInterval(function () {\n      if (index < sliders.length - 1) {\n        setIndex(index + 1);\n      } else {\n        setIndex(0);\n      }\n    }, time);\n    return function () {\n      return clearInterval(tick);\n    };\n  }, [index]);\n  React.useEffect(function () {// if(visibility){\n    //     setTimeout(()=>{\n    //         setShow(true)\n    //     },1500)\n    // }\n  }, []);\n  var moveSlideParallax = React.useCallback(function () {\n    var getSlider = document.querySelectorAll('.slider-item-content__card');\n    var getControls = document.querySelectorAll('.controls');\n    var getItemsSlide = document.querySelectorAll('.slider-caja');\n    getControls.forEach(function (controls) {\n      controls.style.transform = \"translateY(\".concat(-window.scrollY / 18, \"px) translateX(-50%)\");\n    });\n    getSlider.forEach(function (slider) {//slider.style.transform = `translateY(${window.scrollY / 10}px)`\n    });\n  }, []);\n  React.useEffect(function () {\n    window.addEventListener('scroll', moveSlideParallax);\n    return function () {\n      return window.removeEventListener('scroll', moveSlideParallax);\n    };\n  }, [moveSlideParallax]);\n  if (!visibility) return null;\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsx(motion.div, {\n      exit: {\n        opacity: 0\n      },\n      initial: {\n        opacity: 0\n      },\n      animate: {\n        opacity: 1\n      },\n      transition: {\n        duration: 1.5,\n        delay: 1.5\n      },\n      children: show ? /*#__PURE__*/_jsxs(SliderCont, _objectSpread(_objectSpread({}, props), {}, {\n        style: {\n          overflow: 'hidden'\n        },\n        children: [/*#__PURE__*/_jsx(\"section\", {\n          className: \"slider-caja\",\n          id: \"s-slider\",\n          children: sliders.map(function (item, i) {\n            return /*#__PURE__*/_jsx(SliderItem, _objectSpread(_objectSpread({\n              src: \"\"\n            }, props), {}, {\n              colorTitle: item.colorTitle,\n              backOpacity: item.backOpacity,\n              textAlign: item.textAlign,\n              btnAlign: item.btnAlign,\n              position: item.positionCard,\n              opacity: item.opacity,\n              cardWidth: item.cardWidth,\n              cardHeight: item.cardHeight,\n              cardColor: item.cardColor,\n              \"data-src\": item.src,\n              colorTextButton: item.colorTextButton,\n              className: i === index ? 'enter nodo-slide all-items-slide' : 'out nodo-slide all-items-slide',\n              children: item.visibilityCard && /*#__PURE__*/_jsx(\"section\", {\n                className: \"slider-item-content\",\n                children: /*#__PURE__*/_jsxs(\"section\", {\n                  className: i === index ? \"slider-item-content__card enter-card\" : \"slider-item-content__card\",\n                  children: [/*#__PURE__*/_jsx(\"h4\", {\n                    children: item.subheading\n                  }), /*#__PURE__*/_jsx(\"h1\", {\n                    children: item.title\n                  }), /*#__PURE__*/_jsx(\"p\", {\n                    children: item.content\n                  }), item.textButton === '' ? null : /*#__PURE__*/_jsx(\"div\", {\n                    className: \"btn-content\",\n                    children: /*#__PURE__*/_jsx(Ancla, {\n                      href: item.buttonURL,\n                      backColor: colorTitles,\n                      children: item.textButton\n                    })\n                  })]\n                })\n              })\n            }), i);\n          })\n        }), controls && /*#__PURE__*/_jsx(\"section\", {\n          className: \"controls\",\n          children: sliders.map(function (item, i) {\n            return /*#__PURE__*/_jsxs(\"section\", {\n              children: [/*#__PURE__*/_jsx(\"input\", {\n                type: \"radio\",\n                name: \"controls\",\n                id: \"check\".concat(i),\n                value: i,\n                checked: i === index,\n                onChange: function onChange() {\n                  return setIndex(i);\n                }\n              }), /*#__PURE__*/_jsx(\"label\", {\n                htmlFor: \"check\".concat(i),\n                children: /*#__PURE__*/_jsx(\"span\", {})\n              })]\n            }, i);\n          })\n        })]\n      })) : null\n    })\n  });\n};\n\nexport default SliderOpacity;","map":null,"metadata":{},"sourceType":"module"}