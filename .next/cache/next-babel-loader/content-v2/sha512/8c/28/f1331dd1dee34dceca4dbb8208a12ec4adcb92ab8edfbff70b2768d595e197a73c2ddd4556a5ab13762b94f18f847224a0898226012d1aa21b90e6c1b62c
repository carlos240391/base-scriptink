{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { SliderCont, SliderItem } from './slider_opacity_styles';\nimport { motion } from 'framer-motion';\nimport { Ancla } from '../../generals/buttons';\n\nconst SliderOpacity = props => {\n  //const {items, controls} = props\n  const [index, setIndex] = React.useState(0);\n  const [show, setShow] = React.useState(true);\n  const {\n    sliders,\n    controls,\n    time,\n    visibility,\n    colorTitles\n  } = props.themeSettings.sliderOpacitySettings;\n  React.useEffect(() => {\n    const tick = setInterval(() => {\n      if (index < sliders.length - 1) {\n        setIndex(index + 1);\n      } else {\n        setIndex(0);\n      }\n    }, time);\n    return () => clearInterval(tick);\n  }, [index]);\n  React.useEffect(() => {// if(visibility){\n    //     setTimeout(()=>{\n    //         setShow(true)\n    //     },1500)\n    // }\n  }, []);\n  const moveSlideParallax = React.useCallback(() => {\n    const getSlider = document.querySelectorAll('.slider-item-content__card');\n    const getControls = document.querySelectorAll('.controls');\n    const getItemsSlide = document.querySelectorAll('.slider-caja');\n    getControls.forEach(controls => {\n      controls.style.transform = `translateY(${-window.scrollY / 18}px) translateX(-50%)`;\n    });\n    getSlider.forEach(slider => {//slider.style.transform = `translateY(${window.scrollY / 10}px)`\n    });\n  }, []);\n  React.useEffect(() => {\n    window.addEventListener('scroll', moveSlideParallax);\n    return () => window.removeEventListener('scroll', moveSlideParallax);\n  }, [moveSlideParallax]);\n  if (!visibility) return null;\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsx(motion.div, {\n      exit: {\n        opacity: 0\n      },\n      initial: {\n        opacity: 0\n      },\n      animate: {\n        opacity: 1\n      },\n      transition: {\n        duration: 1.5,\n        delay: 1.5\n      },\n      children: show ? /*#__PURE__*/_jsxs(SliderCont, _objectSpread(_objectSpread({}, props), {}, {\n        style: {\n          overflow: 'hidden'\n        },\n        children: [/*#__PURE__*/_jsx(\"section\", {\n          className: \"slider-caja\",\n          id: \"s-slider\",\n          children: sliders.map((item, i) => /*#__PURE__*/_jsx(SliderItem, _objectSpread(_objectSpread({\n            src: \"\"\n          }, props), {}, {\n            colorTitle: item.colorTitle,\n            backOpacity: item.backOpacity,\n            textAlign: item.textAlign,\n            btnAlign: item.btnAlign,\n            position: item.positionCard,\n            opacity: item.opacity,\n            cardWidth: item.cardWidth,\n            cardHeight: item.cardHeight,\n            cardColor: item.cardColor,\n            \"data-src\": item.src,\n            colorTextButton: item.colorTextButton,\n            className: i === index ? 'enter nodo-slide all-items-slide' : 'out nodo-slide all-items-slide',\n            children: item.visibilityCard && /*#__PURE__*/_jsx(\"section\", {\n              className: \"slider-item-content\",\n              children: /*#__PURE__*/_jsxs(\"section\", {\n                className: i === index ? \"slider-item-content__card enter-card\" : \"slider-item-content__card\",\n                children: [/*#__PURE__*/_jsx(\"h4\", {\n                  children: item.subheading\n                }), /*#__PURE__*/_jsx(\"h1\", {\n                  children: item.title\n                }), /*#__PURE__*/_jsx(\"p\", {\n                  children: item.content\n                }), item.textButton === '' ? null : /*#__PURE__*/_jsx(\"div\", {\n                  className: \"btn-content\",\n                  children: /*#__PURE__*/_jsx(Ancla, {\n                    href: item.buttonURL,\n                    backColor: colorTitles,\n                    children: item.textButton\n                  })\n                })]\n              })\n            })\n          }), i))\n        }), controls && /*#__PURE__*/_jsx(\"section\", {\n          className: \"controls\",\n          children: sliders.map((item, i) => {\n            return /*#__PURE__*/_jsxs(\"section\", {\n              children: [/*#__PURE__*/_jsx(\"input\", {\n                type: \"radio\",\n                name: \"controls\",\n                id: `check${i}`,\n                value: i,\n                checked: i === index,\n                onChange: () => setIndex(i)\n              }), /*#__PURE__*/_jsx(\"label\", {\n                htmlFor: `check${i}`,\n                children: /*#__PURE__*/_jsx(\"span\", {})\n              })]\n            }, i);\n          })\n        })]\n      })) : null\n    })\n  });\n};\n\nexport default SliderOpacity;","map":null,"metadata":{},"sourceType":"module"}